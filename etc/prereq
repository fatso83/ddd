#!/bin/bash

# Check for prerequisite packages

# This file is part of DDD.
# 
# DDD is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
# 
# DDD is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with DDD -- see the file COPYING.
# If not, see <http://www.gnu.org/licenses/>.
# 
# DDD is the data display debugger.
# For details, see the DDD World-Wide-Web page, 
# `http://www.gnu.org/software/ddd/',
# or send a mail to the DDD developers <ddd@gnu.org>.

# Usage:  prereq [-maint*]
#  -maint | -maintainer:  Check for pre-reqs to build from repo

MAINTAINER=0

ARCH=$(uname -m)

usage()
{
  echo "Check for pre-requisite packages to build DDD"
  echo "Usage:  $0 [-maint | maintainer]"
  echo "  -maint | -maintainer:  Check for pre-reqs to build from repo"
}

for ARG in $*; do
  case "$ARG" in 
    -maint | --maint | -maintainer)
	MAINTAINER=1
	;;
    -h | -help | --help)
	usage
	exit 1   
	;;
    *)
	echo "error: unrecognized argument: $ARG"
	usage
	exit 1   
	;;
  esac
done 

DEBIANPKGS=( \
  "binutils" "g++" "gcc" "make" "libmotif-dev" "libx11-dev" "libxpm-dev" \
  "libxt-dev" "libxaw7-dev" "libxpm-dev" "libncurses-dev" "gdb" "fonts-liberation" \
  "libtinyxml2-dev" \
  )
DEBIANDEVPKGS=( \
  "automake" "autoconf" "libtool" "bison" "flex" "texinfo" "netpbm" "fig2dev" \
  "imagemagick" "texlive-font-utils" "texlive-latex-base" \
  )

FEDORAPKGS=( \
  "binutils" "gcc-c++" "gcc" "make" "motif-devel" "libX11-devel" "libXpm-devel" \
  "libXaw-devel" "libXt-devel" "ncurses-devel" "gdb" "liberation-fonts-common" \
  "liberation-sans-fonts" "liberation-mono-fonts" "liberation-serif-fonts" \
  "netpbm-progs" "tinyxml2-devel" \
  )
FEDORADEVPKGS=( \
  "automake" "autoconf" "libtool" "bison" "flex" "texinfo" "netpbm" "transfig" \
  "ImageMagick" "texinfo-tex" \
  )

SUSEPKGS=( \
  "binutils" "gcc-c++" "gcc" "make" "motif-devel" "libX11-devel" "libXpm-devel" \
  "libXaw-devel" "libXt-devel" "ncurses-devel" "gdb" "liberation-fonts" \
  "netpbm" "tinyxml2-devel" \
  )
SUSEDEVPKGS=( \
  "automake" "autoconf" "libtool" "bison" "flex" "texinfo" "netpbm" "transfig" \
  "ImageMagick" "texinfo" "texlive-cm-lgc" \
  )

NEEDED=""

if grep -E "Ubuntu|Raspbian" /etc/os-release > /dev/null; then
  DISTRO="DEBIAN"
  dpkg -l | tail -n +6 | cut -d ' ' -f 3 | tr ' ' '\n' > /tmp/debian.dpkg.$$
elif grep USE /etc/os-release > /dev/null; then
  DISTRO="SUSE"
  INSTALLED=$(zypper search -i | tr -s ' ' | cut -d ' ' -f 3)
  if [ "$ARCH" = "x86_64" ]; then
    INSTALLED=$(echo $INSTALLED | grep -v '32bit')
  fi
elif grep Fedora /etc/redhat-release > /dev/null; then
  DISTRO="FEDORA"
else
  DISTRO="UNKNOWN"
fi

if [ "$DISTRO" = "UNKNOWN" ]; then
  echo "Cannot check pre-req's for $DISTRO"
  usage
  exit 1
fi

if [ "$DISTRO" = "DEBIAN" ]; then
  echo "Checking pre-req's for $DISTRO"
  echo ""

  if [ $MAINTAINER = 1 ]; then
    PKGS=( ${DEBIANPKGS[*]} ${DEBIANDEVPKGS[*]} )
  else
    PKGS=( ${DEBIANPKGS[*]} )
  fi
  
  for PKG in ${PKGS[@]}
  do 
    if grep "$PKG" /tmp/debian.dpkg.$$ &> /dev/null ; then
      echo "$PKG installed"
    else
      echo "$PKG not installed"
      NEEDED="$NEEDED $PKG"
    fi
  done
  
  rm -f /tmp/debian.dpkg.$$
fi

if [ "$DISTRO" = "FEDORA" ]; then
  echo "Checking pre-req's for $DISTRO"

  if [ $MAINTAINER = 1 ]; then
    PKGS=( ${FEDORAPKGS[*]} ${FEDORADEVPKGS[*]} )
  else
    PKGS=( ${FEDORAPKGS[*]} )
  fi
 
  for PKG in ${PKGS[@]}
  do 
    if dnf list installed $PKG 2> /dev/null | grep -e "$ARCH\|noarch" &> /dev/null ; then
      echo "$PKG installed"
    else
      echo "$PKG not installed"
      NEEDED="$NEEDED $PKG"
    fi
  done
fi

if [ "$DISTRO" = "SUSE" ]; then
  echo "Checking pre-req's for $DISTRO"
  echo ""

  if [ $MAINTAINER = 1 ]; then
    PKGS=( ${SUSEPKGS[*]} ${SUSEDEVPKGS[*]} )
  else
    PKGS=( ${SUSEPKGS[*]} )
  fi
  
  for PKG in ${PKGS[@]}
  do 
    if echo $INSTALLED | grep " $PKG " | grep $ARCH &> /dev/null ; then
      echo "$PKG installed"
    else
      echo "$PKG not installed"
      NEEDED="$NEEDED $PKG"
    fi
  done
fi

echo " "
if [ "$NEEDED" == "" ] ; then
  echo "All prerequsite packages installed"
else 
  echo "The following packages need to be installed:"
  echo $NEEDED
fi
